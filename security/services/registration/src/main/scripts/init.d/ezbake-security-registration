#!/bin/bash
#   Copyright (C) 2013-2014 Computer Sciences Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

### BEGIN INIT INFO
# Provides:          ezbake-security-registration
# Required-Start:    networking
# Required-Stop:     networking
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: EzRegistration Thrift service
# Description:       EzRegistration Thrift service
### END INIT INFO

# Source function library.
. /etc/init.d/functions
export EZBAKE_ENCRYPTION_SECRET=$(runuser ezsecurity -l sh -c 'echo ${EZBAKE_ENCRYPTION_SECRET}')

EZ_PREFIX=/opt/ezbake/ezbake-security-registration
servicename=ezbake-security-registration
RETVAL=0
LOCKFILE=/var/lock/subsys/${servicename}
PIDFILE="${EZ_PREFIX}/${servicename}.pid"

EZ_USER=ezsecurity

APP_NAME=common_services
SERVICE_NAME=EzSecurityRegistration
SERVICE_ID=_Ez_Registration
SERVICE_CLASS=ezbake.security.service.registration.handler.EzSecurityRegistrationHandler
SSL_DIR="${EZ_PREFIX}/etc/ezbake/pki"

PORT=30200
THRIFT_RUNNER_JAR="/opt/ezbake/thriftrunner/bin/thriftrunner.jar"
THRIFT_RUNNER_OPTS="-j ${EZ_PREFIX}/lib/ezbake-security-registration.jar \
          -c ${SERVICE_CLASS} -x ${SERVICE_ID} \
          -p ${PORT} -s ${SERVICE_NAME} \
          -D ezbake.shared.secret.environment.variable=EZBAKE_ENCRYPTION_SECRET \
          -D ezbake.security.app.id=${SERVICE_ID} \
          -D ezbake.security.app.service.impl=ezbake.security.persistence.impl.AccumuloRegistrationManager \
          -D ezbake.security.ssl.dir=${SSL_DIR}"

JAVA_OPTS="-jar ${THRIFT_RUNNER_JAR} ${THRIFT_RUNNER_OPTS}"

STETHOSCOPE_CLIENT="/opt/ezbake/ezbake-discovery-stethoscope-client/bin/ezbake-discovery-stethoscope-client.jar"
STETHOSCOPE="java -jar $STETHOSCOPE_CLIENT \
-D ezbake.security.ssl.dir=${SSL_DIR} \
-D service.name=${SERVICE_NAME} \
-D application.name=common_services \
--private-service-hostname $(hostname) \
--private-service-port ${PORT} \
--public-service-hostname $(hostname) \
--public-service-port ${PORT} \
--checkin-interval "5" &> /tmp/${servicename}/stethoscope.log"

start() {
	echo -n "Starting ${servicename}: "

	daemon --user $EZ_USER --pidfile ${PIDFILE} "cd \"${EZ_PREFIX}\" && { ${STETHOSCOPE} & java ${JAVA_OPTS} ; } &>/dev/null & echo \$! > ${PIDFILE}"
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch $LOCKFILE

	echo
	start_logstash
	return $RETVAL
}

stop() {
	echo -n "Shutting down ${servicename}: "
	pkill -P $(<${PIDFILE}) && success || failure
	RETVAL=$?
	rm -f $PIDFILE
	rm -f $LOCKFILE
	echo
	stop_logstash
	return $RETVAL
}

LOGSTASH_HELPER=/opt/ezbake/ezbake-logstash-helper/logstash.sh
function start_logstash() {
    if [ -f "${LOGSTASH_HELPER}" ]; then
	runuser ${EZ_USER} <<-END
	source "${LOGSTASH_HELPER}"
	start_logstash "${APP_NAME}" "${SERVICE_NAME}" "${EZ_PREFIX}/logstash"
	END
    fi
}

function stop_logstash() {
    if [ -f "${LOGSTASH_HELPER}" ]; then
	runuser ${EZ_USER} <<-END
	source "${LOGSTASH_HELPER}"
	stop_logstash "${APP_NAME}" "${SERVICE_NAME}" "${EZ_PREFIX}/logstash"
	END
    fi
}

case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    status)
	echo -n "Status of ${servicename}: "
	PID=`cat "$PIDFILE"`
	if [ -f "$PIDFILE" -a -d "/proc/${PID}" ]; then
		echo -n "running"
		RETVAL=0
	elif [ -f "$LOCKFILE" ]; then
		echo -n "dead"
		RETVAL=2
	else
		echo -n "dead"
		RETVAL=3
	fi
	echo
	;;
    restart)
    	stop
	start
	;;
    reload)
	#<cause the service configuration to be reread, either with
	#kill -HUP or by restarting the daemons, in a manner similar
	#to restart above>
	;;
    *)
	echo "Usage: ${servicename} {start|stop|status|reload|restart}"
	exit 1
	;;
esac
exit $RETVAL
